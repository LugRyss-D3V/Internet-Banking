// <auto-generated />
using System;
using InternetBanking.Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InternetBanking.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231121164727_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InternetBanking.Core.Domain.Common.Products", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Cuantity")
                        .HasColumnType("float");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("ProductType").HasValue("Products");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Beneficiary", b =>
                {
                    b.Property<string>("BeneficiaryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SavingAccountId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BeneficiaryId", "UserId", "SavingAccountId");

                    b.ToTable("Beneficiaries", (string)null);
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Cuantity")
                        .HasColumnType("float");

                    b.Property<string>("FromId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FromType")
                        .HasColumnType("int");

                    b.Property<string>("ToId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToType")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.ToTable("Transactions", (string)null);
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.CreditCard", b =>
                {
                    b.HasBaseType("InternetBanking.Core.Domain.Common.Products");

                    b.Property<double?>("Limit")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("CreditCard");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.Loan", b =>
                {
                    b.HasBaseType("InternetBanking.Core.Domain.Common.Products");

                    b.HasDiscriminator().HasValue("Loan");
                });

            modelBuilder.Entity("InternetBanking.Core.Domain.Entities.SavingAccount", b =>
                {
                    b.HasBaseType("InternetBanking.Core.Domain.Common.Products");

                    b.Property<int?>("SavingAccountType")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("SavingAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
